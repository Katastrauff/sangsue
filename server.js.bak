'use strict';
var http = require('http');
var port = process.env.PORT || 8080;
var serverUrl = "http://localhost:8080"
var request = require("request");
var fs = require('fs');
var path = require('path');
var qs = require('querystring');



var validExtensions = {
    ".html": "text/html",
    ".js": "application/javascript",
    ".css": "text/css",
    ".txt": "text/plain",
    ".jpg": "image/jpeg",
    ".gif": "image/gif",
    ".png": "image/png",
    ".woff": "application/font-woff",
    ".woff2": "application/font-woff2",
    ".ico": "image/x-icon",
    ".map": "text/plain"
};


http.createServer(function (req, res) {
    try {
        
        var now = new Date();

        var filename = req.url || "/index.html";
        if (req.url === '/') {
            filename = '/index.html';
        }
        if (filename.indexOf('?') >= 0) {
            filename = filename.substring(0, filename.indexOf('?'));
        }
        if (filename.indexOf('#') >= 0) {
            filename = filename.substring(0, filename.indexOf('?'));
        }

        var ext = path.extname(filename);
        var localPath = __dirname;

        var validMimeType = true;
        var mimeType = validExtensions[ext];
        validMimeType = validExtensions[ext] != undefined;

        if (request.method == 'POST') {
            var body = '';

            request.on('data', function (data) {
                body += data;

                // Too much POST data, kill the connection!
                // 1e6 === 1 * Math.pow(10, 6) === 1 * 1000000 ~~~ 1MB
                if (body.length > 1e6)
                    request.connection.destroy();
            });

            request.on('end', function () {
                var post = qs.parse(body);
                // use post['blah'], etc.
            });
        }
        if (validMimeType) {
            localPath += filename;
            fs.access(localPath, function (err) {
                if (err) {
                    console.error('500: ' + localPath);
                    res.writeHead(404);
                    res.end();
                } else {
                    console.log('200: ' + localPath);
                    getFile(localPath, res, mimeType);
                }
            });
        } else {
            console.error("Invalid file extension detected: " + ext + " (" + filename + ")")
        }

    } catch (ex) {
        console.error(ex);
    }
}).listen(port);
    
function getFile(localPath, res, mimeType) {
    fs.readFile(localPath, function (err, contents) {
        if (!err) {
            res.setHeader("Content-Length", contents.length);
            if (mimeType !== undefined) {
                res.setHeader("Content-Type", mimeType);
            }
            res.statusCode = 200;
            res.end(contents);
        } else {
            console.error(err)
            res.writeHead(500);
            res.end();
        }
    });
}

